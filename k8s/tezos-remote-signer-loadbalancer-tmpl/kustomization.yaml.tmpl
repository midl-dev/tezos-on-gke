bases:
  - ./../tezos-remote-signer-loadbalancer-base

namespace: ${kubernetes_namespace}

namePrefix: ${kubernetes_name_prefix}-

nameSuffix: -${baker_name}

commonLabels:
  app: tezos-remote-signer-forwarder-${baker_name}

imageTags:
  - name: tezos-remote-signer-forwarder
    newName: gcr.io/${project}/tezos-remote-signer-forwarder
    newTag: ${kubernetes_namespace}-latest
  - name: tezos-remote-signer-loadbalancer
    newName: gcr.io/${project}/tezos-remote-signer-loadbalancer
    newTag: ${kubernetes_namespace}-latest

configMapGenerator:
- name: tezos-remote-signer-loadbalancer-configmap
  literals:
  - KUBERNETES_NAME_PREFIX="${kubernetes_name_prefix}"
  - PUBLIC_BAKING_KEY_HASH="${baking_nodes[nodename][baker_name]["public_baking_key_hash"]}"
  - RPI_SIGNER="${lookup(baking_nodes[nodename][baker_name], "rpi_signer", "true")}"
  - LEDGER_AUTHORIZED_PATH="${lookup(baking_nodes[nodename][baker_name], "ledger_authorized_path", "")}"
  - SIGNER_A_PORT="${baking_nodes[nodename][baker_name]["authorized_signers"][0]["signer_port"]}"
%{ if length(baking_nodes[nodename][baker_name]["authorized_signers"]) > 1 }
  - SIGNER_B_PORT="${element(baking_nodes[nodename][baker_name]["authorized_signers"],1)["signer_port"]}"
%{endif}

patchesStrategicMerge:
- nodepool.yaml
%{ for signerindex, signer in baking_nodes[nodename][baker_name]["authorized_signers"] }
- remote_signer_patch_${signerindex}.yaml
%{ endfor }
